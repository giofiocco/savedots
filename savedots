#!/bin/sh

set -e

if [ "$1" = "help" ]; then 
  echo "savedots [command]"
  echo "  init                inits the repo"
  echo "  install             installs the command"
  echo "  cp                  copies files from the repo to their location"
  echo "  add [path] [name]   add file to the config file"
  echo "  help                prints this help page"
  exit 0
elif [ "$1" = "install" ]; then
  if [ ! -f "savedots" ]; then
    echo "cannot find savedots in the directory"
    exit 1
  fi
  sudo cp savedots /usr/local/bin/savedots
  exit 0
fi

if ! command -v jq &> /dev/null; then
  echo "jq could not be found"
  exit 1
fi

if ! command -v git &> /dev/null; then
  echo "git could not be found"
  exit 1
fi

configfile="$HOME/.config/savedots.json"

if [ "$1" = "cp" ]; then
  if [ ! -f savedots.json ]; then
    echo "savedots.json not found"
    exit 1
  fi
  if [ -f $configfile ]; then
    read -p "file $configfile already exists, wanna override it? [Y/n]: " -r
    if [[ ! $REPLY =~ ^[Yy]{0,1}$ ]]; then
      exit 1
    fi 
  fi
  cp savedots.json $configfile
  files=$(jq ".files" savedots.json)
  LEN=$(echo $files | jq '. | length')
  for (( i=0; i<$LEN; i++ )); do
    name=$(echo $files | jq -r ".[$i].name")
    path=$(echo $files | jq -r ".[$i].path")
    path=${path/\~/$HOME}
    if [ -f $path ]; then
      read -p "file $path already exists, wanna override it? [Y/n]: " -r
      if [[ ! $REPLY =~ ^[Yy]{0,1}$ ]]; then
        continue
      fi
    fi
    if [ ! -d "${path%/*}" ]; then
      mkdir ${path%/*}
    fi
    cp $name $path
    echo copied $name $path
  done
  exit 0
fi 

cachedir=$HOME/.cache/savedots

if [ "$1" = "init" ]; then
  repo=$2
  if [ ! $repo ]; then
    read -p "repo: " repo
  fi
  if git ls-remote --exit-code $repo > /dev/null 2>&1; then
    rm -rf $cachedir
    git clone $repo $cachedir
    if [ ! -f $cachedir/savedots.json ]; then
      echo "savedots.json not found"
      exit 1
    fi
    if [ -f $configfile ]; then
      read -p "file $configfile already exists, wanna override it? [Y/n]: " -r
      if [[ ! $REPLY =~ ^[Yy]{0,1}$ ]]; then
        exit 1
      fi 
    fi
    cp $cachedir/savedots.json $configfile
  else
    "{\"remoterepo\": \"$repo\", "files": []}" > $configfile
    mkdir $cachedir
    cd $cachedir
    git init
    git remote add origin $repo
    cp $configfile $cachedir/savedots.json
    cd -
    cp $0 $cachedir/savedots
    cd $cachedir
    git add .
    git commit -m "start"
  fi
  exit 0
fi

if [ ! -f "$configfile" ]; then
  echo "$configfile not found"
  exit 1
fi

repo=$(jq -r '.remoterepo' $configfile)
if [ ! "$repo" ]; then
  echo no remoterepo specified
  exit 1
fi

if [ ! -d "$cachedir" ]; then
  if ! git ls-remote --exit-code $repo > /dev/null 2>&1; then
    echo $repo does not exists or is empty
    echo try running $0 init
    exit 1
  fi
  git clone --depth=1 $repo $cachedir
fi

if [ "$1" = "add" ]; then
  path=$2
  name=$3
  if [ ! "$path" ]; then
    read -p "path: " path
  fi
  if [ ! "$name" ]; then
    read -p "name: " name
  fi

  if [ ! -f $path ]; then
    echo "file $path does not exists"
    exit 1
  fi
  
  if [[ ! $path == "/*" ]]; then
    path=$(pwd)/$path
  fi

  obj="{\"name\": \"$name\",\"path\": \"${path/$HOME/\~}\"}"

  if [ ! $(jq ".files | index($obj)" $configfile) = null ]; then
    echo $name $path already added
    exit 1
  fi

  temp=$(mktemp)
  jq ".files += [$obj]" $configfile > $temp
  cp $temp $configfile
  exit 0
fi

jq -c ".files.[]" $configfile | while read i; do
  name=$(jq -r '.name' <<< $i)
  path=$(jq -r '.path' <<< $i)
  path=${path/\~/$HOME}
  file=$cachedir/$name
  if [ ! -f "$path" ]; then
    echo file $path needed for $name not found
  fi
  cd $cachedir
  if [ ! -f $file ] || ! git diff $file $path; then
    if [ ! -d ${file%/*} ] && [[ $name == *"/"* ]]; then
      mkdir ${file%/*}
    fi
    cp $path $file
    git add $file
  fi
done

cd $cachedir
git add savedots.json

if [[ `git status --porcelain` ]]; then
  git commit -m $(date +%F:%T)
  git push -u origin master
fi


